<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="url_encoder_8c" kind="file">
    <compoundname>urlEncoder.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="118">
        <label>stdlib.h</label>
      </node>
      <node id="120">
        <label>string.h</label>
      </node>
      <node id="115">
        <label>/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c</label>
        <link refid="urlEncoder.c"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>math.h</label>
      </node>
      <node id="119">
        <label>ctype.h</label>
      </node>
      <node id="117">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="url_encoder_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char from_hex</definition>
        <argsstring>(char ch)</argsstring>
        <name>from_hex</name>
        <param>
          <type>char</type>
          <declname>hexadecimalChar</declname>
          <defname>ch</defname>
        </param>
        <briefdescription>
<para>Returns the decimal value for a given hexadecimal character. </para>        </briefdescription>
        <detaileddescription>
<para>This code has been downloaded from <ulink url="http://www.geekhideout.com/urlcode.shtml">http://www.geekhideout.com/urlcode.shtml</ulink> on April 16, 2011</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hexadecimalChar</parametername>
</parameternamelist>
<parameterdescription>
<para>- The given hexadecimal character</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The equivalent decimal value</para></simplesect>
{ <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>=<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" kindref="member" tooltip="Converts a hex character to its integer value.">from_hex</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> } </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" line="10" bodyfile="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="url_encoder_8c_1a2729474e3f010e609583b6d3eef22e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char to_hex</definition>
        <argsstring>(char code)</argsstring>
        <name>to_hex</name>
        <param>
          <type>char</type>
          <declname>decimalChar</declname>
          <defname>code</defname>
        </param>
        <briefdescription>
<para>Returns the hexadecimal value for a given decimal character. </para>        </briefdescription>
        <detaileddescription>
<para>This code has been downloaded from <ulink url="http://www.geekhideout.com/urlcode.shtml">http://www.geekhideout.com/urlcode.shtml</ulink> on April 16, 2011</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decimalChar</parametername>
</parameternamelist>
<parameterdescription>
<para>- The given decimal character</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The hexadecimal equivalent value</para></simplesect>
{ <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>=<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a2729474e3f010e609583b6d3eef22e1a" kindref="member" tooltip="Converts an integer value to its hex character.">to_hex</ref>(</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> } </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" line="16" bodyfile="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="url_encoder_8c_1a8b27af4a03e8ce05aae7cfed09971f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* url_encode</definition>
        <argsstring>(char *str)</argsstring>
        <name>url_encode</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" line="24" bodyfile="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" bodystart="23" bodyend="40"/>
        <references refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a2729474e3f010e609583b6d3eef22e1a" compoundref="_e_s_a_p_i_c_auxiliary_functions_8c" startline="23" endline="27">to_hex</references>
      </memberdef>
      <memberdef kind="function" id="url_encoder_8c_1aea3ffe702ce39d26857607be86e6ca83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* url_decode</definition>
        <argsstring>(char *str)</argsstring>
        <name>url_decode</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" line="45" bodyfile="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c" bodystart="44" bodyend="69"/>
        <references refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" compoundref="_e_s_a_p_i_c_auxiliary_functions_8c" startline="15" endline="18">from_hex</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>code<sp/>has<sp/>been<sp/>downloaded<sp/>from<sp/>http://www.geekhideout.com/urlcode.shtml<sp/>on<sp/>April<sp/>16,<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>a<sp/>hex<sp/>character<sp/>to<sp/>its<sp/>integer<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="url_encoder_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" kindref="member" tooltip="Converts a hex character to its integer value.">from_hex</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isdigit(ch)<sp/>?<sp/>ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>tolower(ch)<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Converts<sp/>an<sp/>integer<sp/>value<sp/>to<sp/>its<sp/>hex<sp/>character*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="url_encoder_8c_1a2729474e3f010e609583b6d3eef22e1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a2729474e3f010e609583b6d3eef22e1a" kindref="member" tooltip="Converts an integer value to its hex character.">to_hex</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>code)<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hex[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789abcdef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hex[code<sp/>&amp;<sp/>15];</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>a<sp/>url-encoded<sp/>version<sp/>of<sp/>str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPORTANT:<sp/>be<sp/>sure<sp/>to<sp/>free()<sp/>the<sp/>returned<sp/>string<sp/>after<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="url_encoder_8c_1a8b27af4a03e8ce05aae7cfed09971f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="url_encoder_8c_1a8b27af4a03e8ce05aae7cfed09971f99" kindref="member">url_encode</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pstr<sp/>=<sp/>str,<sp/>*buf<sp/>=<sp/>malloc(strlen(str)<sp/>*<sp/>3<sp/>+<sp/>1),<sp/>*pbuf<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pstr)<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalnum(*pstr)<sp/>||<sp/>*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/>*pstr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">,<sp/>*pbuf++<sp/>=<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a2729474e3f010e609583b6d3eef22e1a" kindref="member" tooltip="Converts an integer value to its hex character.">to_hex</ref>(*pstr<sp/>&gt;&gt;<sp/>4),<sp/>*pbuf++<sp/>=<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a2729474e3f010e609583b6d3eef22e1a" kindref="member" tooltip="Converts an integer value to its hex character.">to_hex</ref>(*pstr<sp/>&amp;<sp/>15);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pstr++;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>*pbuf<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>a<sp/>url-decoded<sp/>version<sp/>of<sp/>str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPORTANT:<sp/>be<sp/>sure<sp/>to<sp/>free()<sp/>the<sp/>returned<sp/>string<sp/>after<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="url_encoder_8c_1aea3ffe702ce39d26857607be86e6ca83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="url_encoder_8c_1aea3ffe702ce39d26857607be86e6ca83" kindref="member">url_decode</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pstr<sp/>=<sp/>str,<sp/>*buf<sp/>=<sp/>malloc(strlen(str)<sp/>+<sp/>1),<sp/>*pbuf<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pstr)<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pstr[1]<sp/>&amp;&amp;<sp/>pstr[2])<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" kindref="member" tooltip="Converts a hex character to its integer value.">from_hex</ref>(pstr[1])<sp/>&lt;&lt;<sp/>4<sp/>|<sp/><ref refid="_e_s_a_p_i_c_auxiliary_functions_8c_1a808bcf33a4b41b04fc0bc6a5f5813973" kindref="member" tooltip="Converts a hex character to its integer value.">from_hex</ref>(pstr[2]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pstr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pbuf++<sp/>=<sp/>*pstr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstr++;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>*pbuf<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/deepaksubramanian/Documents/Folder of Documents/XCode/ESAPI_COMPLETE/branches/ESAPI Branch Cuckoo/Pure C functions/ESAPIEncoder/urlEncoder.c"/>
  </compounddef>
</doxygen>
